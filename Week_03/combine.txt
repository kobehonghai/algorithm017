public class Combine {
    public static void main(String[] args) {

    }

    public List<List<Integer>> combine(int n, int k) {
        List<List<Integer>> res = new ArrayList<>();
        Deque<Integer> path = new LinkedList<>();
        helper(n,k,1,res,path);
        return res;
    }

    public void helper(int n,int k,int start,List<List<Integer>> res,Deque<Integer> path) {
        if (path.size() == k) {
            res.add(new ArrayList<>(path));
            return;
        }
        for (int i = start; i <= n - (k-path.size()) + 1; i++) {
            path.addLast(i);
            helper(n,k,i+1,res,path);
            path.removeLast();
        }
    }
}