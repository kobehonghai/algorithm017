class Solution {
    public int[] twoSum(int[] nums, int target) {
        if(nums==null || nums.length<2){
            return new int[]{};
        }
        for(int i=0;i<nums.length-1;i++){
            for(int j=i+1;j<nums.length;j++){
                if(nums[i]+nums[j]==target){
                    return new int[]{i,j};
                }
            }
        }
        return new int[]{};
    }
}

class Solution {
    public int[] twoSum(int[] nums, int target) {
        if(nums==null || nums.length<2){
            return new int[]{};
        }
        Map<Integer,Integer> map=new HashMap();
            for(int i=0;i<nums.length;i++){
                int key=target-nums[i];
                if(map.containsKey(key)){
                    return new int[]{map.get(key),i};
                }else{
                    map.put(nums[i],i);
                }
            }
        return new int[]{};
    }
}