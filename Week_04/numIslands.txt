public int numIslands(char[][] grid){
        int m=grid.length;
        if (m==0) {
            return 0;
        }
        int n=grid[0].length;
        int count=0;
        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                if (grid[i][j]=='1') {
                    dfs(grid,m,n,i,j);
                    count++;
                }
            }
        }
        return count;
    }

    private void dfs(char[][] grid, int m, int n,int x,int y) {
        if (x < 0 || x >= m || y < 0 || y >= n || grid[x][y] != '1') {
            return;
        }

        grid[x][y]='0';

        dfs(grid,m,n,x-1,y);
        dfs(grid,m,n,x+1,y);
        dfs(grid,m,n,x,y+1);
        dfs(grid,m,n,x,y-1);

    }