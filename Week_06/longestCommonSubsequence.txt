public int longestCommonSubsequence(String text1, String text2) {
        int m=text1.length();
        int n=text2.length();
        char[] charText1=text1.toCharArray();
        char[] charText2=text2.toCharArray();
        if (m == 0 || n == 0) {
            return 0;
        }
        int[][] subsequence=new int[m+1][n+1];
        for (int i = 0; i <= m; i++) {
            subsequence[i][0]=0;
        }
        for (int i = 0; i <=n ; i++) {
            subsequence[0][i]=0;
        }
        for (int i = 1; i <=m; i++) {
            for (int j = 1; j <=n ; j++) {
                if (charText1[i - 1] == charText2[j - 1]) {
                    subsequence[i][j] = subsequence[i - 1][j - 1] + 1;
                } else {
                    subsequence[i][j]=Math.max(subsequence[i-1][j],subsequence[i][j-1]);
                }
            }
        }
        return subsequence[m-1][n-1];
    }